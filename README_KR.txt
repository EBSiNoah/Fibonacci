피보나치 숫자 구하기

fibonachi.cpp

fibo_01 함수는 단순 반복문으로 n번째 피보나치 숫자를 구한다.
fibor 함수는 재귀함수를 이용해 n번째 피보나치 숫자를 구한다.
fibor01 함수는 재귀 함수와 전역 배열을 이용해 재귀적인 방법의 단점인 이미 계산되어 있는 피보나치 수를 다시 계산하는 수고를 덜었다.
----------------------------------------------------------------------------------------------------------------------------------------------
pybonacci_ver202.py

피보나치 수를 구하는 이전의 방법은 N번째 숫자를 구하기 위해 이전의 수를 모두 계산해야 했다.
그래서 행렬과 피보나치 수의 성질을 이용하여 비 선형적인 방법으로 피보나치 수를 구하는 방법을 찾았다.

pybonacci0303 함수가 최종 완성형이다.
1 1
1 0
이라는 행렬이 있다. 이를 다시 표현하면
| f(n+1)   f(n)  | n
| f(n)     f(n-1) |
꼴의 행렬과 같은데
n=0 인 경우는 유닛행렬으로 초기화한다.
위 행렬은 AB=BA 성질이 성립한다.
따라서 구하고자 하는 N번째 피보나치 수가 있으면
F(n) = F(n/2) + F(n/2) 와 같다.
이를 풀어서 나열하면
F(n) = Sigma F( n/(2^k) ) (0<=k <=n) 이다.
이 경우, 정수형 나눗셈이기 때문에 실질적으로는
F(n) = F(n/2) + F(n/2) + F(n%2) 가 된다.
이 방법으로 피보나치 숫자를 구하는 과정에
중간 피보나치 숫자를 계산할 필요가 없기 때문에
기존 방법보다 더 빠르다.
-------------------------------------------------------------
pybonacci_ver2.cpp

python으로 만들어진 것을 c++으로 다시 변환하였다.
다차원 배열 변수를 다루는데 두 언어간에 차이를 느낄수 있었다.